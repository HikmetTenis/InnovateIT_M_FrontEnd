name: Build and Push Front End to Google Cloud Platform
# on:
#   push:
#     branches: [ main ]
on:
  push:
    branches: [ master ]

jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:  
      PROJECT_ID: monitoring-442416
      REPOSITORY: repo
      IMAGE: ttfrontend
      GKE_LOCATION: us-central1
    steps: 
    - name: Checkout   
      uses: actions/checkout@v2     
 
    # - uses: google-github-actions/setup-gcloud@v2
    - uses: google-github-actions/auth@v2 
      with:   
        credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Configure Docker Client
      run: |-  
        gcloud auth configure-docker --quiet
        gcloud auth configure-docker ${GKE_LOCATION}-docker.pkg.dev --quiet
        
    - name: Push Docker Image to Artifact Registry
      env:
        GIT_TAG: v0.1.21
      run: |-
        docker build -t ${IMAGE}:latest .
        # docker compose -f docker-compose.yaml build
        docker tag ${IMAGE}:latest ${GKE_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:latest
        # docker push us-central1-docker.pkg.dev/backend-440112/repo/$IMAGE_NAME:latest
        docker push ${GKE_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:latest
        
    - name: Get Current Version
      id: version
      run: |
        if [ -f VERSION ]; then
          echo "current=$(cat VERSION)" >> $GITHUB_ENV
        else
          echo "current=0.1.0" >> $GITHUB_ENV
        fi

    - name: Bump Version
      id: bump
      run: |
        current=$(cat VERSION)
        IFS='.' read -r major minor patch <<< "$current"
        patch=$((patch + 1))
        new_version="$major.$minor.$patch"
        echo "$new_version" > VERSION
        echo "new_version=$new_version" >> $GITHUB_ENV

    - name: Commit and Tag
      run: |
        git add VERSION
        git commit -m "chore: bump version to ${{ env.new_version }}"
        git tag "v${{ env.new_version }}"
        git push --follow-tags
      env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

    
